<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Mangaka_Studio.Controls"
                    xmlns:services="clr-namespace:Mangaka_Studio.Controls.Converters" 
                    xmlns:models="clr-namespace:Mangaka_Studio.Models" 
                    xmlns:skia="clr-namespace:SkiaSharp;assembly=SkiaSharp"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <services:ToolTypeConverter x:Key="ToolTypeConverter"></services:ToolTypeConverter>
    <services:SKColorToBrushConverter  x:Key="SKColorToBrushConverter"></services:SKColorToBrushConverter>
    <services:HueToColorConverter  x:Key="HueToColorConverter"></services:HueToColorConverter>
    <services:ColorStringToSKColorConverter x:Key="ColorStringToSKColorConverter"></services:ColorStringToSKColorConverter>
    <system:Boolean x:Key="TrueValue">True</system:Boolean>
    
    <!-- Цвета -->
    <Color x:Key="MainColor">#1A1A1A</Color>
    <Color x:Key="MainColorDark1">#4D4D4D</Color>
    <Color x:Key="MainColorDark2">#808080</Color>
    <Color x:Key="MainColorMedium">#A6A6A6</Color>
    <Color x:Key="MainColorLight2">#CCCCCC</Color>
    <Color x:Key="MainColorLight1">#E0E0E0</Color>
    <Color x:Key="BackGroundColor">#F0F0F0</Color>
    <SolidColorBrush x:Key="MainBrush" Color="{StaticResource MainColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="BrushDark" Color="{StaticResource MainColorDark1}"></SolidColorBrush>
    <SolidColorBrush x:Key="BrushMediumDark" Color="{StaticResource MainColorDark2}"></SolidColorBrush>
    <SolidColorBrush x:Key="BrushMedium" Color="{StaticResource MainColorMedium}"></SolidColorBrush>
    <SolidColorBrush x:Key="BrushMediumLight" Color="{StaticResource MainColorLight2}"></SolidColorBrush>
    <SolidColorBrush x:Key="BrushLight" Color="{StaticResource MainColorLight1}"></SolidColorBrush>
    <SolidColorBrush x:Key="MainColorGrid">#7f7f7f</SolidColorBrush>
    <SolidColorBrush x:Key="MainColorCanvas">#4D4D4D</SolidColorBrush>
    <SolidColorBrush x:Key="MainColorMenu">#CCCCCC</SolidColorBrush>

    <!-- Стиль для Font -->
    <Style x:Key="MainFont" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
    </Style>

    <!-- Стиль для Slider -->
    <Style x:Key="ColorSlider" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Border Height="10" CornerRadius="5" Margin="0, 0">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Color="Red" Offset="0"/>
                                    <GradientStop Color="Yellow" Offset="0.166"/>
                                    <GradientStop Color="Lime" Offset="0.333"/>
                                    <GradientStop Color="Cyan" Offset="0.5"/>
                                    <GradientStop Color="Blue" Offset="0.666"/>
                                    <GradientStop Color="Magenta" Offset="0.833"/>
                                    <GradientStop Color="Red" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Track x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Width="5" Height="10"
                               VerticalAlignment="Center"
                               RenderTransformOrigin="0.5,0.5">
                                    <Thumb.Background>
                                        <SolidColorBrush Color="{Binding Hue, Converter={StaticResource HueToColorConverter}}"/>
                                    </Thumb.Background>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AllSlider" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Border Background="{StaticResource BrushMediumDark}" Height="10" BorderThickness="1" BorderBrush="Black" CornerRadius="5" Margin="0, 0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Track x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Width="5" Height="10"
                           VerticalAlignment="Center"
                           RenderTransformOrigin="0.5,0.5"
                                   Background="{StaticResource BrushLight}">
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для Border -->
    <Style x:Key="BorderCanvas" TargetType="Border">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource MainBrush}"></Setter>
    </Style>

    <Style x:Key="BorderInner" TargetType="Border">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource BrushDark}"></Setter>
    </Style>

    <!-- Стиль для CheckBox -->
    <Style x:Key="VSMCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                 Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                 Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="OuterBorder"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="White" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="OuterBorder"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="Black" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="BackgroundBorder"
                        CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Margin="3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"/>
                            </Border.Effect>
                        </Border>

                        <Path x:Name="CheckMark"
                      Data="M 0 5 L 4 9 L 10 0"
                      Stroke="White"
                      StrokeThickness="2"
                      Stretch="Uniform"
                      Opacity="0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Width="10" Height="10"
                          Margin="10"
                      RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            </Path.RenderTransform>
                        </Path>

                        <Border x:Name="OuterBorder"
                        CornerRadius="5"
                        BorderBrush="Transparent"
                        BorderThickness="2"
                        Margin="0"
                        Background="Transparent">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"/>
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VSMCheckBoxEyeToggle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="EyeClosed"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="EyeOpen"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="EyeOpen"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="EyeClosed"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="OuterBorder"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="White" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="OuterBorder"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="Black" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="BackgroundBorder"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Black"
                            BorderThickness="1"
                            Margin="3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"/>
                            </Border.Effect>
                        </Border>

                        <Path x:Name="EyeOpen"
                          Data="M1,10 C4,2 12,2 15,10 C12,18 4,18 1,10 M8,13 A3,3 0 1 1 8,7 A3,3 0 1 1 8,13"
                          Stroke="White"
                          StrokeThickness="1.5"
                          Fill="White"
                          Stretch="Uniform"
                          Opacity="0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Width="21" Height="21"
                          Margin="5"
                          RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            </Path.RenderTransform>
                        </Path>

                        <Path x:Name="EyeClosed"
                          Data="M1,10 C4,2 12,2 15,10 C12,18 4,18 1,10 M2,2 L14,18 M14,2 L2,18"
                          Stroke="White"
                          StrokeThickness="1.5"
                          Fill="Transparent"
                          Stretch="Uniform"
                          Opacity="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Width="21" Height="21"
                          Margin="5"
                          RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="0.6" ScaleY="0.6"/>
                            </Path.RenderTransform>
                        </Path>

                        <Border x:Name="OuterBorder"
                            CornerRadius="5"
                            BorderBrush="Transparent"
                            BorderThickness="2"
                            Margin="0"
                            Background="Transparent">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"/>
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Стиль Expander -->
    <Style x:Key="ModernExpander" TargetType="Expander">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource BrushMediumLight}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Margin="4"
                            Padding="4">
                        <DockPanel>
                            <ToggleButton x:Name="ExpanderToggleButton"
                                          Content="{TemplateBinding Header}"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="Bold"
                                          Background="{StaticResource BrushDark}"
                                          BorderBrush="Black"
                                          BorderThickness="1"
                                          Padding="6,3"
                                          Cursor="Hand"
                                          DockPanel.Dock="Top">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Grid>
                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="4">
                                                            <ContentPresenter TextBlock.FontFamily="Segoe UI" HorizontalAlignment="Left"
                                                                              VerticalAlignment="Center"
                                                                              Margin="20,0,0,0"/>
                                                        </Border>
                                                        <Path x:Name="Arrow" Data="M 0 0 L 4 4 L 8 0"
                                                              HorizontalAlignment="Left"
                                                              VerticalAlignment="Center"
                                                              Margin="6,0,0,0"
                                                              Stroke="White"
                                                              StrokeThickness="2"
                                                              RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="0"/>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="Arrow" Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <ContentPresenter x:Name="Content" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ExpanderToggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Стиль для ComboBox-->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                        <Grid>
                            <ToggleButton x:Name="ExpanderToggleButton"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      Foreground="{TemplateBinding Foreground}"
                                      FontWeight="Bold"
                                      Background="{StaticResource BrushMediumDark}"
                                      BorderBrush="Black"
                                      BorderThickness="1"
                                      Padding="6,3"
                                      Cursor="Hand"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Grid>
                                                        <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            CornerRadius="4">
                                                            
                                                            <Border.Effect>
                                                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                                                            </Border.Effect>
                                                        </Border>
                                                        <StackPanel>
                                                            <ContentPresenter TextBlock.FontFamily="Segoe UI"
                                                                  HorizontalAlignment="Left" TextBlock.FontWeight="Light"
                                                                  VerticalAlignment="Center" Margin="5,0"/>
                                                        </StackPanel>
                                                        <Path x:Name="Arrow"
                                                          Data="M 0 0 L 4 4 L 8 0"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Center"
                                                          Margin="0,0,6,0"
                                                          Stroke="White"
                                                          StrokeThickness="2"
                                                          RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="0"/>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="Arrow" Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <Popup x:Name="DropDownPopup"
                               Placement="Bottom"
                                   MaxHeight="150"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               AllowsTransparency="True">
                                <Border Background="{StaticResource BrushMedium}"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Padding="4">
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для ComboBoxItem -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="5,3"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>

                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Margin="5,0,5,3" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" 
                            Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Стиль для ScrollViewer -->
    <Style TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border Background="Transparent" Padding="5">
                        <ScrollContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для TextBox -->
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <StackPanel>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Stretch"
                                          Margin="2,0,2,0" />
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushLight}"></Setter>
                            <Setter Property="Foreground" Value="Black"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Red"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Red"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Шаблон для твердого ластика -->
    <DataTemplate x:Key="EraserHardToolTemplate">
        <StackPanel Margin="5,0">
            <TextBlock Margin="5" HorizontalAlignment="Center" Style="{StaticResource MainFont}">Параметры твердого ластика</TextBlock>
            <Border Height="1" Style="{StaticResource BorderInner}"></Border>
            <TextBlock Margin="5" Style="{StaticResource MainFont}" Text="Размер:"></TextBlock>
            <StackPanel Orientation="Horizontal">
                <Slider Width="100" Margin="5" Style="{StaticResource AllSlider}" Minimum="1" Maximum="30" Value="{Binding Settings.StrokeWidth, Mode=TwoWay}"></Slider>
                <TextBlock Style="{StaticResource MainFont}" Text="{Binding Settings.StrokeWidth, StringFormat={}{0:0}}"></TextBlock>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal">
                <CheckBox Style="{StaticResource VSMCheckBox}" HorizontalAlignment="Left" Width="Auto" Height="Auto" Margin="5" IsChecked="{Binding Settings.IsAntialias}"></CheckBox>
                <TextBlock Margin="0" Style="{StaticResource MainFont}" VerticalAlignment="Center" Text="Мягкость" Foreground="Black"></TextBlock>
            </StackPanel>
            
        </StackPanel>
    </DataTemplate>

    <!-- Шаблон для мягкого ластика -->
    <DataTemplate x:Key="EraserSoftToolTemplate">
        <StackPanel Margin="5,0">
            <TextBlock Margin="5" HorizontalAlignment="Center" Style="{StaticResource MainFont}">Параметры мягкого ластика</TextBlock>
            <Border Height="1" Style="{StaticResource BorderInner}"></Border>
            <TextBlock Margin="5" Style="{StaticResource MainFont}" Text="Размер:"></TextBlock>
            <StackPanel Orientation="Horizontal">
                <Slider Width="100" Margin="5" Style="{StaticResource AllSlider}" Minimum="1" Maximum="30" Value="{Binding Settings.StrokeWidth, Mode=TwoWay}"></Slider>
                <TextBlock Style="{StaticResource MainFont}" Text="{Binding Settings.StrokeWidth, StringFormat={}{0:0}}"></TextBlock>
            </StackPanel>
            <TextBlock Margin="5" Style="{StaticResource MainFont}" Text="Радиус сглаживания:"></TextBlock>
            <StackPanel Orientation="Horizontal">
                <Slider Width="100" Margin="5" Style="{StaticResource AllSlider}" Minimum="0" Maximum="10" Value="{Binding Settings.BlurRad, Mode=TwoWay}"></Slider>
                <TextBlock Style="{StaticResource MainFont}" Text="{Binding Settings.BlurRad, StringFormat={}{0:0}}"></TextBlock>
            </StackPanel>
            <TextBlock Margin="5" Style="{StaticResource MainFont}" Text="Прозрачность:"></TextBlock>
            <StackPanel Orientation="Horizontal">
                <Slider Width="100" Margin="5" Style="{StaticResource AllSlider}" Minimum="0" Maximum="255" Value="{Binding Settings.Transparent, Mode=TwoWay}"></Slider>
                <TextBlock Style="{StaticResource MainFont}" Text="{Binding Settings.BlurRad, StringFormat={}{0:0}}"></TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <CheckBox Style="{StaticResource VSMCheckBox}" HorizontalAlignment="Left" Width="Auto" Height="Auto" Margin="5" IsChecked="{Binding Settings.IsAntialias}"></CheckBox>
                <TextBlock Margin="0" Style="{StaticResource MainFont}" VerticalAlignment="Center" Text="Мягкость" Foreground="Black"></TextBlock>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <local:ToolEraseTemplateSelector x:Key="ToolEraseTemplateSelector" EraserHardToolTemplate="{StaticResource EraserHardToolTemplate}"
EraserSoftToolTemplate="{StaticResource EraserSoftToolTemplate}"></local:ToolEraseTemplateSelector>

    <!-- Стиль для кнопки -->
    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" Margin="0"></Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <ContentPresenter Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PopUpButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Padding" Value="2"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <ContentPresenter Margin="3,3,3,3" VerticalAlignment="Center" HorizontalAlignment="Center" Cursor=""></ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Black"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для ListBox -->
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource BrushMedium}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushMediumDark}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- Стиль для TabControl -->
    <Style TargetType="TabControl" x:Key="ModernTabControl">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <DockPanel>
                        <!-- TabPanel -->
                        <TabPanel 
                        Name="HeaderPanel"
                        Panel.ZIndex="1"
                        IsItemsHost="True"
                        Margin="0,0,0,0"
                        Background="Transparent"
                        KeyboardNavigation.TabIndex="1"
                        DockPanel.Dock="Top" />

                        <Border Margin="3,8,3,3" CornerRadius="6" BorderThickness="2" BorderBrush="Black">
                            <ContentPresenter 
                                Name="ContentPanel"
                                ContentSource="SelectedContent"
                                Margin="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для TabItem -->
    <Style TargetType="TabItem" x:Key="ModernTabItem">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Margin="3,3,0,0">
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <ContentPresenter Margin="3"
                                    ContentSource="Header"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Стиль для ListBoxItem -->
    <Style x:Key="LayerListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border x:Name="Bd" 
                            BorderThickness="2" 
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Margin="2"
                            SnapsToDevicePixels="True"
                            CornerRadius="8">
                            <ContentPresenter/>
                        </Border>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource BrushDark}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource MainBrush}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource BrushMedium}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource MainBrush}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для RadioButton -->
    <Style x:Key="ButtonColor" TargetType="RadioButton">
        <Setter Property="Foreground" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="IsHitTestVisible" Value="True"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Black"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для IconRadioButton -->
    <Style x:Key="ToolsButton" TargetType="local:IconRadioButton">
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Padding" Value="2"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IconRadioButton">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Image Source="{Binding IconSource, RelativeSource={RelativeSource TemplatedParent}}" Width="16" Height="16" Margin="3"></Image>
                            <ContentPresenter Margin="3,3,5,3"  HorizontalAlignment="Center" Cursor=""></ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Black"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для IconRadioButton -->
    <Style x:Key="EraserButton" TargetType="local:IconRadioButton">
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Padding" Value="2"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IconRadioButton">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Image Source="{Binding IconSource, RelativeSource={RelativeSource TemplatedParent}}" Width="30" Height="30" Margin="3"></Image>
                            <ContentPresenter Margin="3,3,3,3" VerticalAlignment="Center" HorizontalAlignment="Center" Cursor=""></ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Black"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для IconButton -->
    <Style x:Key="LayersIconButton" TargetType="local:IconButton">
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="14"></Setter> 
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Padding" Value="2"></Setter>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IconButton">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <Image Source="{Binding IconSource, RelativeSource={RelativeSource TemplatedParent}}" Width="16" Height="16" Margin="3"></Image>
                            <ContentPresenter Margin="3,3,10,3" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Black"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Шаблон для ручки -->
    <DataTemplate x:Key="PenToolTemplate">
        <StackPanel HorizontalAlignment="Stretch">
            <TextBlock Margin="5" Style="{StaticResource MainFont}" Text="Толщина линии:" Foreground="Black"></TextBlock>
            <StackPanel Orientation="Horizontal">
                <Slider Style="{StaticResource AllSlider}" Margin="5" Width="100" Minimum="1" Maximum="50" Value="{Binding StrokeWidth, Mode=TwoWay}"></Slider>
                <TextBlock Style="{StaticResource MainFont}" Text="{Binding StrokeWidth, StringFormat={}{0:0}}"></TextBlock>
                <TextBlock Style="{StaticResource MainFont}" Text="px"></TextBlock>
            </StackPanel>
            
            <TextBlock Margin="5" Style="{StaticResource MainFont}" Text="Прозрачность:" Foreground="Black"></TextBlock>
            <StackPanel Orientation="Horizontal">
                <Slider Style="{StaticResource AllSlider}" Margin="5" Width="100" Minimum="0" Maximum="100" Value="{Binding Transparent, Mode=TwoWay}"></Slider>
                <TextBlock Style="{StaticResource MainFont}" Text="{Binding Transparent, StringFormat={}{0:0}}"></TextBlock>
            </StackPanel>
            
            <TextBlock Margin="5" Style="{StaticResource MainFont}" Text="Цвет:" Foreground="Black"></TextBlock>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <RadioButton Margin="5,0,0,5" Grid.Column="0" IsChecked="True" GroupName="MainColor" Width="30" Height="30" Command="{Binding DataContext.ColorVM.SwitchColorCommand1, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Background="{Binding StrokeColor, Converter={StaticResource SKColorToBrushConverter}}" Style="{StaticResource ButtonColor}"></RadioButton>
                <RadioButton Margin="5,0,0,5" Grid.Column="1" GroupName="MainColor" Width="30" Height="30" Command="{Binding DataContext.ColorVM.SwitchColorCommand2, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Background="{Binding StrokeColor1, Converter={StaticResource SKColorToBrushConverter}}" Style="{StaticResource ButtonColor}"></RadioButton>
                <Border Grid.Column="2" Background="Transparent" BorderBrush="Transparent"></Border>
            </Grid>
            
            <StackPanel Orientation="Horizontal">
                <CheckBox Style="{StaticResource VSMCheckBox}" HorizontalAlignment="Left" Width="Auto" Height="Auto" Margin="5" IsChecked="{Binding IsSmooth}"></CheckBox>
                <TextBlock Margin="0" Style="{StaticResource MainFont}" VerticalAlignment="Center" Text="Мягкость" Foreground="Black"></TextBlock>
            </StackPanel>
            
        </StackPanel>
    </DataTemplate>

    <!-- Шаблон для ластика -->
    <DataTemplate x:Key="EraserToolTemplate">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto">
                    <StackPanel>
                        <Expander Style="{StaticResource ModernExpander}" Header="Ластики" IsExpanded="True">
                            <StackPanel DataContext="{Binding DataContext.ToolsVM, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Cursor="">
                                <local:IconRadioButton Margin="5,10,5,5" Style="{StaticResource EraserButton}" IconSource="Resources\hard-eraser.png" Command="{Binding SelectPenCommand}" CommandParameter="{x:Static models:ToolsType.HardEraser}">Твердый ластик</local:IconRadioButton>
                                <local:IconRadioButton Margin="5" Style="{StaticResource EraserButton}" IconSource="Resources\soft-eraser.png" Command="{Binding SelectPenCommand}" CommandParameter="{x:Static models:ToolsType.SoftEraser}">Мягкий ластик</local:IconRadioButton>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
                <Border Grid.Row="1" Style="{StaticResource BorderInner}"></Border>
                <ContentControl Grid.Row="2" DataContext="{Binding DataContext.CanvasVM, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Content="{Binding CurrentTool}" ContentTemplateSelector="{StaticResource ToolEraseTemplateSelector}">

                </ContentControl>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <!-- Шаблон для текста -->
    <DataTemplate x:Key="TextToolTemplate">
        <StackPanel DataContext="{Binding DataContext.TextTempVM, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Margin="10,0" HorizontalAlignment="Stretch">
            <StackPanel Grid.Row="0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                    <local:IconButton Margin="0,0,5,0" VerticalAlignment="Center" Style="{StaticResource LayersIconButton}" IconSource="Resources\free-icon-plus.png" Command="{Binding SetCreateModeCommand}">Создать</local:IconButton>
                    <local:IconButton Opacity="{Binding OpacityBoundsTextDel}" IsHitTestVisible="{Binding IsHitTextDel}" VerticalAlignment="Center" Style="{StaticResource LayersIconButton}" IconSource="Resources\free-icon-cross.png" Command="{Binding SetDeleteModeCommand}">Удалить</local:IconButton>
                </StackPanel>
                <TextBlock FontSize="12" Style="{StaticResource MainFont}" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding TextModeStr}"/>
                <local:IconButton Margin="5" Visibility="{Binding IsVisibleMode}" VerticalAlignment="Center" Style="{StaticResource LayersIconButton}" IconSource="Resources\free-icon-cross.png" Command="{Binding SetCancelModeCommand}">Отмена</local:IconButton>
                <StackPanel Visibility="{Binding IsVisibleEditText}">
                    <Border Style="{StaticResource BorderInner}"/>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Style="{StaticResource MainFont}" Text="Толщина:"/>
                        <ComboBox Grid.Column="1" Style="{StaticResource ModernComboBox}" Margin="5,0" ItemsSource="{Binding FontWeights}" SelectedItem="{Binding FontStyleWeight, Mode=TwoWay}"/>
                    </Grid>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Style="{StaticResource MainFont}" Text="Ширина:"/>
                        <ComboBox Grid.Column="1" Style="{StaticResource ModernComboBox}" Margin="5,0" ItemsSource="{Binding FontWidths}" SelectedItem="{Binding FontStyleWidth, Mode=TwoWay}"/>
                    </Grid>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Style="{StaticResource MainFont}" Text="Наклон:"/>
                        <ComboBox Grid.Column="1" Style="{StaticResource ModernComboBox}" Margin="5,0" ItemsSource="{Binding FontSlants}" DisplayMemberPath="Name"
                                    SelectedValuePath="Value" SelectedValue="{Binding FontStyleSlant, Mode=TwoWay}"/>
                    </Grid>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Style="{StaticResource MainFont}" Text="Размер:"/>
                        <ComboBox Grid.Column="1" Style="{StaticResource ModernComboBox}" Margin="5,0" ItemsSource="{Binding FontSizes}" SelectedItem="{Binding SelectedFontSize, Mode=TwoWay}"/>
                    </Grid>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Style="{StaticResource MainFont}" Text="Стиль:"/>
                        <ComboBox Grid.Column="1" Style="{StaticResource ModernComboBox}" Margin="5,0" ItemsSource="{Binding FontFamilies}" SelectedItem="{Binding SelectedFontFamily, Mode=TwoWay}"/>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Margin="5" Style="{StaticResource MainFont}" Text="Текст:" Foreground="Black"></TextBlock>
                        <RadioButton Margin="0" Grid.Column="1" IsChecked="True" GroupName="MainColor" Width="30" Height="30" Command="{Binding DataContext.ColorVM.SwitchColorCommand1, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Background="{Binding DataContext.ToolsVM.CurrentTool.Settings.StrokeColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource SKColorToBrushConverter}}" Style="{StaticResource ButtonColor}"></RadioButton>
                    </Grid>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5" Style="{StaticResource MainFont}" VerticalAlignment="Center" Text="Обводка" Foreground="Black"></TextBlock>
                        <CheckBox Style="{StaticResource VSMCheckBox}" HorizontalAlignment="Left" Width="Auto" Height="Auto" Margin="0,5" IsChecked="{Binding IsStroke}"></CheckBox>
                    </StackPanel>
                    <StackPanel IsHitTestVisible="{Binding IsHit}" Opacity="{Binding OpacityBounds}" Orientation="Horizontal">
                        <RadioButton Margin="5,0" Grid.Column="3" IsChecked="False" GroupName="MainColor" Width="30" Height="30" Command="{Binding DataContext.ColorVM.SwitchColorCommand2, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Background="{Binding DataContext.ToolsVM.CurrentTool.Settings.StrokeColor1, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Converter={StaticResource SKColorToBrushConverter}}" Style="{StaticResource ButtonColor}"></RadioButton>
                        <TextBlock VerticalAlignment="Center" Padding="5" Style="{StaticResource MainFont}">
                            <Slider Width="50" Style="{StaticResource AllSlider}" Minimum="1" Maximum="10" Value="{Binding DataContext.ToolsVM.CurrentTool.Settings.StrokeWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Mode=TwoWay}"/>
                            <Run Text="{Binding DataContext.ToolsVM.CurrentTool.Settings.StrokeWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, StringFormat={}{0:0.0}}"/>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <local:ToolTemplateSelector x:Key="ToolTemplateSelector" PenToolTemplate="{StaticResource PenToolTemplate}"
EraserToolTemplate="{StaticResource EraserToolTemplate}" TextToolTemplate="{StaticResource TextToolTemplate}"></local:ToolTemplateSelector>

    <!-- Стиль для StackPanel -->
    <Style x:Key="MenuPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"></Setter>
        <Setter Property="Background" Value="{StaticResource BrushMedium}"></Setter>
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
    </Style>

    <!-- Стиль для WrapPanel -->
    <Style x:Key="ToolsParametr" TargetType="WrapPanel">
        <Setter Property="Background" Value="{StaticResource BrushMedium}"></Setter>
        <Setter Property="Orientation" Value="Vertical"></Setter>
        <Setter Property="Width" Value="Auto"></Setter>
    </Style>

    <!-- Стиль для TextBox -->
    <Style x:Key="TextBoxRGB" TargetType="TextBox">
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="2"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="Black" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost"></ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для IconButton -->
    <Style x:Key="UpdateIconButton" TargetType="local:IconButton">
        <Setter Property="Background" Value="{StaticResource BrushMediumDark}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Padding" Value="2"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IconButton">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Image Source="{Binding IconSource, RelativeSource={RelativeSource TemplatedParent}}" Width="16" Height="16" Margin="1,1,1,1"></Image>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="White"></Setter>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="Black"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для Menu -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Opacity" Value="1"></Setter>
    </Style>

    <!-- Стиль для MenuItem -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{StaticResource BrushMediumLight}"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="2"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Border CornerRadius="5" x:Name="InnerBorder" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1" Margin="0">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>
                        <Border CornerRadius="5" x:Name="OuterBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="2" Margin="-3">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2"></DropShadowEffect>
                            </Border.Effect>
                        </Border>

                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Margin="5,3" ContentSource="Header" HorizontalAlignment="Center"/>
                        </StackPanel>

                        <Popup x:Name="SubMenuPopup"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           StaysOpen="False">
                            <Border Background="{StaticResource BrushMedium}"
                                BorderThickness="1"
                                    Padding="3"
                                BorderBrush="Black"
                                CornerRadius="5">
                                <StackPanel>
                                    <ItemsPresenter />
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" 
                                Value="White"/>
                        </Trigger>

                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="OuterBorder" Property="BorderBrush" 
                                Value="Black"/>
                            <Setter TargetName="SubMenuPopup" Property="IsOpen" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        
    </Style>
</ResourceDictionary>